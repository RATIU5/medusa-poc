---
import {medusa} from "../../lib/medusa";
import ProductSelect from "./_components/ProductSelect.svelte";
import type { ProductOption, ProductVariant } from "./_utils/types";

export const prerender = false;

const { productSlug } = Astro.params;

if (!productSlug) {
  return new Response("Not Found", { status: 404 });
}

const productList = await medusa.products.list({handle: productSlug});

if (productList.products.length === 0) {
  return new Response("Not Found", { status: 404 });
}

if (productList.products.length > 1) {
  return new Response("Multiple categories found", { status: 404 });
}

const product = productList.products[0];

if (!product) {
  return new Response("Not Found", { status: 404 });
}

const options: ProductOption[] = product.options?.map(option => ({
    id: option.id,
    title: option.title,
    values: option.values.map(value => value.value)
  })) ?? [];

  const variants: ProductVariant[] = product.variants.map(variant => ({
    id: variant.id ?? "undefined",
    title: variant.title ?? "undefined",
    sku: variant.sku ?? "undefined",
    price: variant.calculated_price ?? 0,
    purchasable: !variant.allow_backorder && (variant.manage_inventory ?? false),
    inStock: true, // Assuming all variants are in stock for this example
    options: variant.options?.reduce((acc, opt) => {
      acc[opt.option.title] = opt.value;
      return acc;
    }, {}) ?? []
  }));
---

<h1>{product.title}</h1>
<p>{product.subtitle}</p>

<p>{product.description}</p>

<img src={product.thumbnail} alt={product.title} />

<ProductSelect {options} {variants} title={product.title} />